version: 1.0
tasks:
  # [377, 373]
  create_ad_user:
    action: core.winrm_ps_cmd
    input:
      transport: ntlm
      cmd: New-ADUser  -Name "<% ctx().first_name%> <%ctx().last_name %>" -GivenName "<% ctx().first_name %>" -Surname "<% ctx().last_name %>" -DisplayName "<% ctx().first_name%> <%ctx().last_name %>" -Department "<% ctx().department %>" -Title "<% ctx().title %>" -Office "<% ctx().location %>" -SamAccountName "<% ctx().samaccountname %>" -UserPrincipalName "<% ctx().emailaddress %>" -Path "<% ctx().target_OU %>" -AccountPassword $(ConvertTo-SecureString "<% ctx().random_string %>" -AsPlainText -Force) -MobilePhone "<% ctx().mobile %>" -Postal "<% ctx().zipcode %>" -StreetAddress "<% ctx().street %>" -State "<% ctx().state %>" -SamAccountName "<% ctx().samaccountname %>" -HomePhone "<% ctx().homephone %>" -Country "<% ctx().country %>" -Company "<% ctx().company %>" -City "<% ctx().city %>" -Enabled $true
      host: <% ctx().ad_host[0] %>
      password: <% ctx().password[0] %>
      username: <% ctx().username[0] %>
      verify_ssl_cert: false
      port: 5985
    next:
      - do:
          - add_group_membs
        when: <% succeeded() %>
        publish:
          - ad_created: Yes
      - do:
          - ticket_update_escalate
        when: <% failed() %>
        publish:
          - ad_created: false
          - membership_copied: false
          - license_added: false
          - mailbox_created: false
          - user_count: " "
  # [371, 521]
  add_group_membs:
    action: core.winrm_ps_cmd
    input:
      transport: ntlm
      cmd: "$groups = <% ctx().groupslist %>\nforeach($groups in $groups.split(\";\")){\n    Add-ADGroupMember -Identity $group -Members \"<% ctx().first_name.substring(0,1)%><%ctx().last_name %>\"\n}"
      password: <% ctx().password[0] %>
      username: <% ctx().username[0] %>
      verify_ssl_cert: false
      host: <% ctx().ad_host[0] %>
      port: 5985
    next:
      - do:
          - fetch_manager_email
        when: <% succeeded() %>
        publish:
          - membership_copied: Yes
  # [737, 148]
  add_manager:
    action: core.winrm_ps_cmd
    input:
      transport: ntlm
      cmd: "Get-ADUser -Identity \"<% ctx().first_name.substring(0,1) %><%ctx().last_name %>\" | Set-ADUser -Manager \"<% ctx().objectid %>\""
      host: <% ctx().ad_host[0] %>
      username: <% ctx().username[0] %>
      password: <% ctx().password[0] %>
      verify_ssl_cert: false
      port: 5985
    next:
      - do:
          - start_delta_sync
        when: <% 1 < 0 %>
  # [156, 16]
  start:
    action: core.echo
    input:
      message: "\"starting\""
    next:
      - do:
          - random
        publish:
          - ad_host: <% ctx().data.ci_details.where($.ci_id = 'AD01').select(str($.connections.POWERSHELL.ip_address)) %>
          - username: <% ctx().data.ci_details.where($.ci_id = 'AD01').select($.connections.POWERSHELL.username) %>
          - password: <% ctx().data.ci_details.where($.ci_id = 'AD01').select($.connections.POWERSHELL.password) %>
          - model_user: <% ctx().data.data.custom_attributes.modeluser %>
          - mobile: <% ctx().data.data.custom_attributes.phone_number %>
          - location: <% ctx().data.data.custom_attributes.location %>
          - title: <% ctx().data.data.custom_attributes.position %>
          - department: <% ctx().data.data.custom_attributes.business_unit %>
          - first_name: <% ctx().data.data.custom_attributes.firstname %>
          - last_name: <% ctx().data.data.custom_attributes.lastname %>
          - ticketNo: <% ctx().data.itsm.details.ticket_id %>
          - manager: <% ctx().data.data.custom_attributes.managername %>
          - display_user: <% ctx().first_name%> <%ctx().last_name %>
          - MailBoxADGroup: <% ctx().data.data.custom_attributes.MailBoxADGroup %>
          - mailbox_required: <% ctx().data.data.custom_attributes.mailbox_required %>
          - ex_host: <% ctx().data.ci_details.where($.ci_id = 'EX01').select(str($.connections.POWERSHELL.ip_address)) %>
          - target_OU: <% ctx().data.data.custom_attributes.targetoupath %>
          - emaildomain: <% ctx().data.data.custom_attributes.emaildomain %>
          - tenant_id: <% ctx().data.ci_details.where($.ci_id = 'OFFICE365').select(str($.connections.GRAPH_API.tenant_id)) %>
          - client_id: <% ctx().data.ci_details.where($.ci_id = 'OFFICE365').select(str($.connections.GRAPH_API.client_id)) %>
          - client_secret: <% ctx().data.ci_details.where($.ci_id = 'OFFICE365').select(str($.connections.GRAPH_API.client_secret)) %>
          - zipcode: "\"4000\""
          - city: "\"Brisbane\""
          - street: "\"345 Queen Street\""
          - country: "\"Australia\""
          - state: "\"QLD\""
          - homephone: "\"+61 7 3222 8444\""
          - company: "\"Pitcher Partners\""
  # [735, 297]
  start_delta_sync:
    action: sim_activedirectory.start_delta_ad_sync
    input:
      ad_host: <% ctx().ad_host[0] %>
      username: <% ctx().username[0] %>
      password: <% ctx().password[0] %>
    next:
      - do:
          - sleep_90
  # [738, 465]
  sleep_90:
    action: core.local
    input:
      cmd: sleep 90
      timeout: 120
    next:
      - do:
          - set_location_license
  # [730, 933]
  end:
    action: core.noop
  # [732, 782]
  ticket_update:
    action: core.echo
    input:
      message: "Automation has successfully onboarded the user.\n\nUser Created: <% ctx().first_name %> <% ctx().last_name %>\nDescription added: User Onboarded as part of <% ctx().ticketNo %>\nMembership groups added: <%ctx().model_user %>\nAD sync: True\nLicense Added: <% ctx().license_added %>\n"
    next:
      - do:
          - end
        publish:
          - state: REMEDIATION
          - info:
              summary: AD and EX tasks attempted
              next_action: escalate
              root_cause: actions_failed
              first_notified: <% task().end_timestamp %>
              last_worked_upon: <% task().end_timestamp %>
              ad_created: <% ctx().ad_created %>
              membership_copied: <% ctx().ad_created %>
              license_added: <% ctx().license_added %>
              mailbox_created: <% ctx().mailbox_created %>
              next_action_attributes:
                escalate:
                  resolution_flag: false
                  team_name: SD
                  owner: None
                  status: In Progress
                  ticket_update: Sim Automation is escalating the service request after completing AD and Exchange tasks
          - execution_log: "[{\"task_name\":\"ad_created\",\"expected_returncode\":\"Yes\", \"actual_returncode\":<% ctx().ad_created  %>},{\"task_name\":\"membership_copied\",\"expected_returncode\":\"Yes\", \"actual_returncode\":<% ctx().membership_copied  %>},{\"task_name\":\"license_added\",\"expected_returncode\":\"Yes\", \"actual_returncode\":<% ctx().license_added  %>},{\"task_name\":\"mailbox_created\",\"expected_returncode\":\"Yes\", \"actual_returncode\":<% ctx().mailbox_created  %>}]"
  # [371, 234]
  check_ad_user:
    action: sim_activedirectory.check_ad_user
    input:
      ad_host: <% ctx().ad_host[0] %>
      display_name: <% ctx().display_user %>
      username: <% ctx().username[0] %>
      password: <% ctx().password[0] %>
      port: 5986
    next:
      - do:
          - create_ad_user
        when: <% str(result().output.task_output.stdout) != "1" and  result().output.task_output.succeeded = true %>
        publish:
          - user_count: <% result().output.task_output.stdout %
      - do:
          - ticket_update_escalate
        when: <% str(result().output.task_output.stdout) = "1"  or result().output.task_output.succeeded = false %>
        publish:
          - user_count: <% result().output.task_output.stdout %>
  # [1, 237]
  ticket_update_escalate:
    action: core.echo
    input:
      message: Input User Issue. Escalating ticket.Reason <% ctx().user_count %> user already present on active directory or error creating new user.
    next:
      - do:
          - end_1_user_exists
        publish:
          - state: DIAGNOSIS
          - info:
              summary: User NOT on-boarded
              next_action: escalate
              root_cause: actions_failed
              first_notified: <% task().end_timestamp %>
              last_worked_upon: <% task().end_timestamp %>
              ad_created: <% ctx().ad_created %>
              membership_copied: <% ctx().ad_created %>
              license_added: <% ctx().license_added %>
              mailbox_created: <% ctx().mailbox_created %>
              next_action_attributes:
                escalate:
                  resolution_flag: false
                  team_name: SD
                  owner: None
                  status: In Progress
                  ticket_update: Sim Automation is escalating the service request after finding the user to be onboarded already exists
          - execution_log: "[{\"task_name\":\"check_ad_user\",\"expected_returncode\":\"1\", \"actual_returncode\":<% ctx().user_count  %>}]"
  # [0, 365]
  end_1_user_exists:
    action: core.noop
  # [372, 657]
  fetch_manager_email:
    action: sim_activedirectory.fetch_email_object_ad_user
    input:
      ad_host: <% ctx().ad_host[0] %>
      display_name: <% ctx().manager %>
      username: <% ctx().username[0] %>
      password: <% ctx().password[0] %>
    next:
      - do:
          - add_manager
        publish:
          - email: <% regex_substring(result().output.task_output.stdout, "(\S+@\S+)") %>
          - objectid: <% regex_substring(result().output.task_output.stdout, "(\S+-\S+-\S+-\S+)") %>
  # [373, 118]
  random:
    action: core.local
    input:
      cmd: "echo \"def@ultPassword123\""
    next:
      - do:
          - check_ad_user
        publish:
          - random_string: <% result().stdout %>
  # [733, 639]
  set_location_license:
    action: sim_o365.set_location_license
    input:
      user: <% ctx().first_name%>.<%ctx().last_name %>@<% ctx().emaildomain %>
      tenant_id: <% ctx().tenant_id[0] %>
      client_secret: <% ctx().client_secret[0] %>
      client_id: <% ctx().client_id[0] %>
    next:
      - do:
          - ticket_update
        publish:
          - state: REMEDIATION
          - info: successfully onboarded
input:
  - data
output:
  - state: <% ctx().state %>
  - info:  <% ctx().info %>
vars:
  - ad_created: NO
  - membership_copied: NO
  - license_added: NO
  - mailbox_created: NO
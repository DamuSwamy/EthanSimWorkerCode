version: 1.0

input:
  - billing_db_connection
  - cloud_db_connection
  - cmdb_db_connection
  - workflow_name
  - ignore_list
  - proxy_vcenters

vars:
  - email_to: 'nandhakumar.arumugam@ethan.com.au,aman.mujawar@ethan.com.au,paul.hooper@ethan.com.au'

#output:
#- result: <% task(Trigger_Dynamic_Workflow).result.items.where(len($.result.output.result) > 0).select($.result.output.result) %>

tasks:
  # [192, 51]
  Start:
    action: core.noop
    next:
      - when: <% succeeded() and ctx().workflow_name != 'ethan_vcenter_active_vspheres' %>
        do:
          - SQL_Select_CMDB_vCenters
      - when: <% succeeded() and ctx().workflow_name = 'ethan_vcenter_active_vspheres' %>
        do:
          - Active_Vcenter_Scan

  # [142, 201]
  Active_Vcenter_Scan:
    action: sim_cloud_billing.ethan_vcenter_active_vspheres
    input:
      cmdb_db_connection: <% ctx().cmdb_db_connection %>
      email_to: <% ctx().email_to %>
    next:
      - when: <% succeeded() %>
        do:
          - End
      - when: <% failed() %>
        do: fail

  # [642, 201]
  SQL_Select_CMDB_vCenters:
    action: sql.query
    input:
      connection: <% ctx().cmdb_db_connection %>
      query: "Select rtrim(invVCServerID) as invVCServerID, rtrim(vcName) as vcName, rtrim(vcIPAddress) as vcIPAddress FROM iaasVCServer WHERE vcActive = '1' ORDER BY invVCServerID"
    next:
      - when: <% succeeded() %>
        publish:
          - cmdb_vcenter_db_data: <% switch(isList(result().result) => result().result, true => []) %>
          - valid_vcenters: <% ctx(cmdb_vcenter_db_data).where(not $.vcName in ctx().ignore_list).select($) %>
          - vcenters: "{{ ctx().valid_vcenters | list }}"
        do:
          - Trigger_Dynamic_Workflow
      - when: <% failed() %>
        do: fail

  # [842, 401]
  Trigger_Dynamic_Workflow:
    action: "sim_cloud_billing.<% ctx().workflow_name %>"
    input:
      billing_db_connection: <% ctx().billing_db_connection %>
      cloud_db_connection: <% ctx().cloud_db_connection %>
      cmdb_db_connection: <% ctx().cmdb_db_connection %>
      vcenter_id: <% str(item(invVCServerID)) %>
      vcenter: <% item(vcName) %>
      proxy_vcenters: <% ctx().proxy_vcenters %>
    with: 
      items: <% ctx(vcenters) %>
      concurrency: 3
    next:
      - when: <% succeeded() %>
        do:
          - End
      - when: <% failed() %>
        do: fail

  # [242, 401]
  End: 
    action: core.noop
